[vars]
# Explicit paths to homebrew-installed utilities, since we might not have
# homebrew in our PATH when bootstrapping.
brew = "/opt/homebrew/bin/brew"
fish = "/opt/homebrew/bin/fish"
stow = "/opt/homebrew/bin/stow"

[tasks.stow]
description = "Link dotfiles with stow."
run = "{{vars.stow}} --target=$HOME --dotfiles --no-folding --restow src"

[tasks.clean]
description = "Remove dotfile links."
run = "{{vars.stow}} --target=$HOME --dotfiles --no-folding --delete src"

[tasks.brew]
description = "Install applications from Homebrew."
wait_for = "install-brew"
run = """
cat <<EOF | {{vars.brew}} bundle --file=-
  brew "fish"
  brew "stow"
  brew "trash"
  cask "1password"
  cask "arc"
  cask "ghostty"
  cask "hammerspoon"
  cask "logi-options+"
  cask "obsidian"
  cask "raycast"
  mas "Parcel", id: 639968404
  mas "Pixelmator Pro", id: 1289583905
EOF
"""

[tasks.bootstrap]
description = "Bootstrap a new machine."
hide = true
depends = [
  "brew",
  "convert-repo",
  "setup-fish",
  "ssh-key",
  "system-settings",
]

[tasks.convert-repo]
description = "Convert a downloaded copy into a jj+git repository."
depends = "xcode"
hide = true
run = """
if test ! -d .jj; then
  jj git init --colocate .
  jj git remote add origin git@github.com:zakj/dotfiles.git
  jj git fetch
  jj bookmark track main@origin
  jj abandon
  jj new main
fi
"""

[tasks.install-brew]
description = "Install Homebrew."
depends = "xcode"
hide = true
run = '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'

[tasks.setup-fish]
description = "Make fish my login shell."
depends = "brew"
hide = true
run = """
  if ! grep -q "{{vars.fish}}" /etc/shells; then
    echo "{{vars.fish}}" | sudo tee -a /etc/shells
    chsh -s "{{vars.fish}}"
  fi
"""

[tasks.ssh-key]
description = "Generate a new ssh key."
hide = true
run = "test -e ~/.ssh/id_ed25519 || ssh-keygen -t ed25519 -a 100"

[tasks.system-settings]
description = "Update various system settings."
run = [
  # Appearance: Show scroll bars when scrolling
  "defaults write NSGlobalDomain AppleShowScrollBars -string WhenScrolling",
  # Desktop & Dock: Auto-hide dock and disable recent apps
  "defaults write com.apple.dock autohide -bool true",
  "defaults write com.apple.dock show-recents -bool false",
  "killall Dock",
  # Keyboard: Disable auto-correct/capitalize
  "defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false",
  "defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false",
  # Trackpad: Tap to click
  "defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true",
  "defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true",
]

[tasks.xcode]
description = "Install Xcode."
hide = true
run = "xcode-select --version || xcode-select --install"
